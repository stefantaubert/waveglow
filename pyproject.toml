[project]
name = "waveglow"
version = "0.0.1"
description = "CLI to train and synthesize with Waveglow."
readme = "README.md"
requires-python = ">=3.6"
license = {text = "MIT"}
authors = [
  {name = "Stefan Taubert", email = "stefan.taubert@posteo.me"}
]
maintainers = [
  {name = "Stefan Taubert", email = "stefan.taubert@posteo.me"},
]
keywords = [
  "Text-to-speech",
  "Speech synthesis",
  "Corpus",
  "Utils",
  "Language",
  "Linguistics"
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Operating System :: OS Independent",
  "Operating System :: MacOS",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: BSD",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
]
dependencies = [
  "torch",
  "mel-cepstral-distance>=0.0.1",
  "pandas",
  "librosa",
  "plotly",
  "scikit-image",
  "matplotlib",
  "scikit-learn",
  "tqdm",
  "wget",
  "gdown",
  "Unidecode",
  "Pillow",
  "fastdtw",
  "numpy",
  "scipy",
  "ordered_set>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/stefantaubert/waveglow"
Issues = "https://github.com/stefantaubert/waveglow/issues"

[project.scripts]
waveglow-cli = "waveglow_cli.cli:run_prod"

[tool.setuptools.packages.find]
where = ["src"]
include = [
  "waveglow",
  "waveglow.*",
  "waveglow_cli",
  "waveglow_tests",
  "waveglow_tests.*",
  "waveglow_cli_tests",
  "waveglow_cli_tests.*",
]
exclude = [
  "waveglow_debug",
  "waveglow_cli_debug",
]
namespaces = true

[tool.pytest.ini_options]
log_cli = true
log_level = "DEBUG"
testpaths = [
  "src/waveglow_tests",
  "src/waveglow_cli_tests"
]
console_output_style = "count"

[tool.autopep8]
indent_size = 2
ignore = ["E121"]
max_line_length = 100

[tool.isort]
line_length = 100
indent = 2

[tool.pyright]
root = ["src"]
include = ["src"]
pythonPlatform = "All"
typeCheckingMode = "off"
stubPath = ""
exclude = [
  "**/node_modules",
  "**/__pycache__",
  ".git",
  "**/*.egg-info",
  "**/*_debug",
]
useLibraryCodeForTypes = true

[build-system]
requires = [
  "setuptools >= 40.9.0",
  "wheel",
]
build-backend = "setuptools.build_meta"
